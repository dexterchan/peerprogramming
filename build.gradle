apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'maven'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group 'io.test.solu'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

repositories {
    mavenCentral()
}

bootJar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}
mainClassName = 'io.test.solu.Main'

ext{
    slf4jVersion = '1.7.28'
    log4jVersion = '2.12.1'
    gsonVersion = '2.8.5'
    junitVersion = '5.3.1'
    lombokVersion = '1.18.10'
    mockitoVersion = '2.23.4'
}

apply plugin: 'com.github.johnrengelman.shadow'


dependencies {

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"


    compile group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"

    //Not working in gradle 5!!!
    //providedCompile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')

    testCompile group: 'org.mockito', name: 'mockito-core', version: "$mockitoVersion"
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$mockitoVersion"

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    //testCompile group: 'junit', name: 'junit', version: '4.12'

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
}

test {
    useJUnitPlatform {
        //includeTags 'model','controllers'
        excludeTags 'integration'
    }
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}

shadowJar {
    zip64 true
    mergeServiceFiles()

}